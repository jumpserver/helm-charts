{{ $core := printf "http://%s-%s:%s" (include "jumpserver.fullname" $) "jms-core" ($.Values.core.service.web.port | toString) }}
{{ $koko := printf "http://%s-%s:%s" (include "jumpserver.fullname" $) "jms-koko" ($.Values.koko.service.web.port | toString) }}
{{ $lion := printf "http://%s-%s:%s" (include "jumpserver.fullname" $) "jms-lion" ($.Values.lion.service.web.port | toString) }}
{{ $chen := printf "http://%s-%s:%s" (include "jumpserver.fullname" $) "jms-chen" ($.Values.chen.service.web.port | toString) }}
{{ $razor := printf "http://%s-%s:%s" (include "jumpserver.fullname" $) "jms-razor" ($.Values.razor.service.web.port | toString) }}
server {
    listen {{ $.Values.web.service.web.port }};
    server_name  _;
    server_tokens off;

    client_max_body_size 4096m;

    location = /robots.txt {
        default_type text/html;
        add_header Content-Type "text/plain; charset=UTF-8";
        return 200 "User-agent: *\nDisallow: /\n";
    }
    location /web/health/ {
        access_log off;
        add_header Content-Type 'application/json';
        return 200 '{"status": "ok"}';
    }
    location /ui/ {
        try_files $uri / /index.html;
        alias /opt/lina/;
    }
    location /luna/ {
        try_files $uri / /index.html;
        alias /opt/luna/;
    }
    location /download/ {
        alias /opt/download/;
        try_files $uri @redirect_oss;
    }
    location @redirect_oss {
        rewrite ^/download/(.*)$ https://static.jumpserver.org/download/$1 permanent;
    }
    location /static/ {
        root /opt/jumpserver/data/;
    }
    location /private-media/ {
        internal;
        alias /opt/jumpserver/data/media/;
    }
    {{- if .Values.xpack.enabled }}
    location /razor/ {
        proxy_pass {{ $razor }};
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_request_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_ignore_client_abort on;
    }
    {{- end }}
    {{- if .Values.koko.enabled }}
    location /koko/ {
        proxy_pass {{ $koko }};
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_request_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_ignore_client_abort on;
    }
    {{- end }}
    {{- if .Values.lion.enabled }}
    location /lion/ {
        proxy_pass {{ $lion }};
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_request_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_ignore_client_abort on;
    }
    {{- end }}
    {{- if .Values.chen.enabled }}
    location /chen/ {
        proxy_pass {{ $chen }};
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_ignore_client_abort on;
    }
    {{- end }}
    {{ if .Values.core.enabled }}
    location /ws/ {
        proxy_pass {{ $core }};
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location ~ ^/(core|api|media)/ {
        proxy_pass {{ $core }};
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    {{- end }}
    location / {
        rewrite ^/(.*)$ /ui/$1 last;
    }
}
